[{"content":"Counting binary trees I was thinking about of the problem of balancing a binary tree, and my mind stumbled across to the question \u0026ldquo;How many different binary trees with labelled nodes can you make without changing the traversal order?\u0026rdquo;. After figuring out the answer myself I realized that the numbers of such binary trees are just Catalan numebrs (I was not really into combinatorics - now I am).\nFor example, the following has traversal order 1-\u0026gt;2-\u0026gt;3-\u0026gt;4-\u0026gt;5-\u0026gt;6-\u0026gt;7\ngraph TB; A((4))--\u003eB((2)) A--\u003eC((6)); B--\u003eE((1)) B--\u003eF((3)) C--\u003eH((5)) C--\u003eI((7)) But the following also has the same traversal order:\ngraph TB; A((4))--\u003eB((3)) A--\u003eC((5)) B--\u003eE((1)) B~~~Hidden1:::hidden E~~~Hidden2:::hidden E--\u003eX((2)) C~~~Hidden3:::hidden C--\u003eI((7)) I--\u003eJ((6)) I~~~Hidden4:::hidden classDef hidden display: none; If we want to maintain the given traversal order while creating with different binary trees, we are essentially counting the number of binary trees that can represent the array $1, 2, 3, \\dots, n$.\nTo construct a binary tree from the given array, there are 2 ways to do so:\nPicking roots in subtrees To create a tree with the array, let\u0026rsquo;s start with picking one of the items as root. Let\u0026rsquo;s say we pick 3 here:\nNow every items before 3 should appears in the left subtree due the way of how traversal order works. Similar for the right subtrees. In order to construct the left/ right subtree, we need to pick the root for them:\nContinue in the same manner, we will get the whole binary tree:\nIt is not hard to see the recursion in this process. After we pick a root, we need to pick the root for the subtrees, which are the same problem with smaller number of nodes. The sizes of the subtrees depends on the choice of the root. By running through all choices of root we have:\nLet $f(n)$ be the number of binary trees desired.\nThen $f(n) = \\sum\\limits_{i=0}^{n-1} f(i)f(n-1-i)$\nPicking legs Draw $n$ nodes with their 2 \u0026ldquo;legs\u0026rdquo;. There are totally $2n$ \u0026ldquo;legs\u0026rdquo;. Each node has a properties called \u0026ldquo;has_parent\u0026rdquo; to keep track of the existence of parent for each node. Initally they are all false. We perform the following:\nDefine the following operations of a node: a. Pick a leg: the leg will be occupied and we have to attach a node to this leg. The node being attached cannot be the root and cannot have a parent. Set the \u0026ldquo;has_parent\u0026rdquo; to true for the attached node. Note that the choice of node being attached is not relevant as the nodes are unlabelled. b. Nullify a leg: the leg will be occupied but we don\u0026rsquo;t attach a node to it. Pick a node and mark it as the root. Set the \u0026ldquo;has_parent\u0026rdquo; to true. Pick one leg of it. Pick a node which has at least one leg not occipied and either pick a leg or nullify a leg of it. Do step 3 until we have picked $n-1$ legs in total. By this process we enumerate all possible binary trees, except some duplicates: In step 2 we picked a node as the root and force it to have at least 1 leg picked, however the nodes should indifferent and the root picking process broke this. As there are $n$ way to pick a root, we should divide the number of possible binary trees by $n$ for deduplication.\nTo see the number of binary trees generated by this process, note that there are $2n$ legs to be picked, and we pick $n-1$ of them. Hence there are $\\binom{2n}{n-1}$ of them. Dividing it by $n$ gives us $\\frac{(2n)!}{(n)!(n+1)!}$ which is the closed form of Catalan numbers.\nFinally note that the number of distinct unlabelled binary trees is the same as distinct labelled binary trees with a given traversal order - there is only 1 way to fill in labels into the nodes such that they match the given traversal order.\n","permalink":"https://katsuragicsl.github.io/blogs/mathematics/reinventing-catalan-numbers/","summary":"Counting binary trees I was thinking about of the problem of balancing a binary tree, and my mind stumbled across to the question \u0026ldquo;How many different binary trees with labelled nodes can you make without changing the traversal order?\u0026rdquo;. After figuring out the answer myself I realized that the numbers of such binary trees are just Catalan numebrs (I was not really into combinatorics - now I am).\nFor example, the following has traversal order 1-\u0026gt;2-\u0026gt;3-\u0026gt;4-\u0026gt;5-\u0026gt;6-\u0026gt;7","title":"Reinventing Catalan numbers"},{"content":"Defining the machine by describing it In Sipser\u0026rsquo;s Introduction to the theory of computation, a alternative way of defining a Turing machine (other than defining the formal 7-tuple, which is a PITA) - by its \u0026ldquo;description\u0026rdquo;. Example (from the proof of $A_{TM}$ is deciable):\nM = “On input \u0026lt;B, w\u0026gt;, where B is a DFA and w is a string: 1. Simulate B on input w. 2. If the simulation ends in an accept state, accept . If it ends in a nonaccepting state, reject .”\nOf cause, we know that the 7-tuple definition is for the sake of formality, if we have to define and manipulate a 7-tuple machine every time we want to do something with Turing machines, that would be insanely tedious. Hence in the book (and in many other occasions?) the Turing machines are defined by its \u0026ldquo;description\u0026rdquo;, including those relatively complicated ones, such as the Turing machine which can output its own description in the proof of recursion theorem.\nThere is seemingly no restriction of how should a description looks like, so I can create a Turing machine by literally any description, right?\nUnicorn algorithm So what is the problem? In fact this approach makes sense in a great extend: not only it reduces the effort of defining a Turing machine, but it also captures the intuition \u0026ldquo;Turing machines are just programs\u0026rdquo;, so defining a Turing machine is essentially defining an algorithm.\nFor \u0026ldquo;most of the cases\u0026rdquo; this is a safe and good way to deal with Turing machines. But let\u0026rsquo;s consider the following description:\nM = “On input w, give a candy to the unicorn who lives in the Hilbert Grand Hotel. If the unicorn accepts your candy, accept. Otherwise reject .”\nThis is a description right? Does that mean I created a Turing machine and I can call it the unicorn algorithm?\nWell, this is an extreme example, but the point is, the description approach of defining Turing machine is too broad, how can we make sure what we described is not \u0026ldquo;impossible\u0026rdquo;? By \u0026ldquo;possible\u0026rdquo; description, I mean a description that can be computed by a Turing machine, instead of things that cannot be done by Turing machine like ffering a candy to the unicorn. Note that there are some problems that looks pretty sane, but they are beyond the Capability of Turing machines, such as the Busy Beaver problem.\nOK, so what we need is to make sure that what the description is describing can actually be done by a Turing machine, right? Let\u0026rsquo;s call such descriptions as \u0026ldquo;Turing description\u0026rdquo;. But how can we tell? Can we prove/ disprove that? It is also natural to ask: \u0026ldquo;how many Turing description are there?\u0026rdquo;, or the a bit more precise and interesting rephrasing: \u0026ldquo;If I pick a description randomly, how possible is it to be Turing description?\u0026rdquo;\nUnfortunately, we can\u0026rsquo;t.\nFirst of all, by \u0026ldquo;prove/ disprove\u0026rdquo;, it means that we have a step-by-step, mechanical way to deduce its trueness - which means there should be a Turing machine taking the statement as input and return 0 or 1. And this Turing machine has to be a decider if we want to tell whether any given description can be implemented by some Turing machine. Let\u0026rsquo;s call this decider be D and we will show its existence.\nLet\u0026rsquo;s restrict the space of possible description without loss of generality: The description of must be well-defined, as in for any given input, it can tell you whether it accepts or not. (Obviously - otherwise it does not even tell me what does it accept. Note that it is different from assuming it is describing a decider - the description just tells you the result, it does not imply that if you throw an input into the corr. Turing machine (if it exists) the machine will halt.). We also assume takes inputs that Turing machines can take (sure, otherwise we know that is not describing a Turing machine straight away).\nNow note that Turing machine input can be encoded as natural numbers:\nLet the Turing machine be associated with a set of symbols $\\Gamma$ and $|\\Gamma| = N$. Assign numbers $0, 1, 2, \\dots, N-1$ to the symbols. Now the input of tape can be viewed as a N-adic number with the first symbol as the least significant figure. For example when $N = 2$, $0101$ is mapped to $1010_{2} = 10$. Note that this is a bijection between all possible input and $\\mathbb{N}$.\nAlso Note that the existence of blank symbol does not affect our argument, we can simply put it in $\\Gamma$ and consider it as a normal symbol.\nHence a description defined above has implicitly defined a function $f:\\mathbb{N} \\to {0, 1}$ as $0, 1$ represents accept and reject.\nNow, we all know that the set of all possible f is uncountable, and that a given Turing machine can only take countably many distinct input, we can conclude that D does not exist, as it cannot even take all the input that it should take, which is the set of all well-defined description, which is f.\nIs it really\u0026hellip;MOST of the cases? The answer of \u0026ldquo;If I pick a description randomly, how possible is it to be Turing description?\u0026rdquo; should be clear now - \u0026ldquo;almost every function from $\\mathbb{N}$ to ${0, 1}$ is not Turing description, since there are uncountably many functions from $\\mathbb{N}$ to ${0, 1}$, but only countably many Turing machines\u0026rdquo;. This statement trigger a person with mathematics background: \u0026ldquo;So\u0026hellip; does that mean the set of Turing descriptions is of measure zero in the set of functions from $\\mathbb{N}$ to ${0, 1}$\u0026rdquo;. But what is the measure of the set of all functions from $\\mathbb{N}$ to ${0, 1}$?\nI didn\u0026rsquo;t find any articles discussing such measures after a few casual Google searches. We can consider the as a subspace of Baire space and take the \u0026ldquo;common prefix metric\u0026rdquo; i.e. given $x={x_1, x_2, \\dots}$ and $y={y_1, y_2, \\dots}$, $d(x, y) = 0$ if $x=y$, otherwise $d(x, y) = 1/k$ where $k$ is the smallest integer s.t. $x_k \\neq y_k$.\nIn this metric space, the set of Turing descriptions is of (Hausdorff) measure zero: Every Turing description can be covered by an arbitrarily small $k$-ball with it as the center.\nThis looks trivial. Now we want to ask, is non-Turing description dense in Baire space?\nOur intuition tells us that it should true. If you pick a $n$ and flip the value of $f(n)$ of a Turing description, this whole function looks \u0026ldquo;unreasonble\u0026rdquo; now and it would be drastically harder to compute. Now let\u0026rsquo;s check if our Baire space model matches this intuition:\nSuppose the set of non-Turing description is not dense. Then there exists a $f$ in Baire space where $f$ is Turing description s.t. there exists an open ball $B_{1/k}(f)$ s.t. no non-Turing description are in this open ball. But now all element in this open ball are Turing description. Note that there are uncountably many elements in this open ball (since the elements inside are sequences of natural numbers that the first $k$ elements are the same as those of $f$. This whole set is bijective to the whole Baire space and hence uncountable), which means there are uncountably many Turing descriptions in the open ball - which is absurd and we have a contradiction. Hence set of non-Turing description is dense.\nSo, now we can say that Turing descriptions are very rare that almost all functions are not Turing description.\nOutro We have shown that defining a Turing machine by writing down its description can be wrong even when we assume the description is \u0026ldquo;well-formed\u0026rdquo;. As almost every description we write is not Turing description and hence constructing complicated description and just presume that there is a Turing machine for it is problematic.\nTuring descriptions is different from compuatble functions (the Turing machine corr. to a computable function is a decider) and Turing recognizable languages (there could be a Turing machine for a corr. description but it does not halt on every input that the description accepts), but computable functions can be injectively mapped into a subset of the set of Turing machines. Hence we can say that almost every function is uncomputable and the set of uncomputable functions is dense.\nStudy the space of computable functions or other computational objects in topological/ measure theoretical setup would be interesting.\n","permalink":"https://katsuragicsl.github.io/blogs/computer-science/from-casual-description-of-turing-machine-to-uncompuatble-functions/","summary":"Defining the machine by describing it In Sipser\u0026rsquo;s Introduction to the theory of computation, a alternative way of defining a Turing machine (other than defining the formal 7-tuple, which is a PITA) - by its \u0026ldquo;description\u0026rdquo;. Example (from the proof of $A_{TM}$ is deciable):\nM = “On input \u0026lt;B, w\u0026gt;, where B is a DFA and w is a string: 1. Simulate B on input w. 2. If the simulation ends in an accept state, accept .","title":"From casual description of Turing Machine to the density of uncomputable functions"},{"content":"My pc is overheated how do i cool it down because it is my life1 Someone said that chatGPT will replace Google. Some kids/ early teenagers do often ask chatGPT for things that could have been found by Googling.\nI really hate the idea of replacing search engines by chatGPT. The problem I have with it is not really about AI, but about how do we interact with it.\nWhen we were kids and learnt how to use search engines, we acquired the skills of capturing important parts of the questions in our minds and turn them into keywords. Bashing questions like \u0026ldquo;my hard disk is full how can I get more space\u0026rdquo; usually get worse results than things like \u0026ldquo;hard disk space full solutions\u0026rdquo; as their counterparts.\nSame thing applies to going to library and look for related books in the old days: you can\u0026rsquo;t expect to see there is a book titled almost the same as your question, you have to look for the suitable subject and go to the corr. book shelves, look for keywords and sometimes even look for keywords that is a superset of the things you want and hopefully get the answer in one of the chapters. I speculate that this process is important for training our abstraction ability.\nBut the chatGPT allows people to input their braindump like casually talking and get the answer.\nOf cause, one can still train abstraction ability by something else, like in the older days when there were no search engines, even no internet. But if you know how to search, in most cases it would be faster and you will get more firm answers. And I hate the (bad type of) laziness shown when some people keep bashing long stupid questions into chatGPT and satisfied by shallow answers.\nWe all do this, but in other situations I recently learnt the concepts of complementary cognitive artifacts and competitive cognitive artifacts from David Krakauer: https://nautil.us/will-ai-harm-us-better-to-ask-how-well-reckon-with-our-hybrid-nature-236098/ . You can think of them as a fancier way to say things that help you but make you dumb and those don\u0026rsquo;t. Competitiv cognitive artifacts aren\u0026rsquo;t always bad. Calculators are competitiv cognitive artifacts with respect to the ability of doing arithmetics manually. But do I care being bad at it? No. Is it important in general? Meh, most huamn beings don\u0026rsquo;t need to be good at arithmetics (as long as not bad enough to think 1+1=3 and grab 3 items in a buy-one-get-one-free sale and argue with the cashier). But the fluency of turning a question into something that can be googled reflects a basic level of abstraction as a thinking/ problem solving skill.\nWell, the plot twist is, chatGPT fans can argue: \u0026ldquo;You can throw a question or even an article and ask chatGPT to extract the keywords for you!\u0026rdquo;. But I don\u0026rsquo;t think human beings can outsource thinking to machines.\nFirst, for aesthetic reason, the effort of understanding the world and the insights and wisdom gain by ourselves are what makes our lives worth as human beings. Just getting the answer means nothing.\nMoreover, if the service is provided by someone else, namely big techs at this moment, it is possible that it is not a \u0026ldquo;pure\u0026rdquo; LLM, it can be poisoned by artificial (as in artificial intelligence, lol) regulations. lcamtuf talked about this. Imagine a world in where people all believes the standards and decisions from a inhuman intelligent system which is actually just humans like in Psycho-Pass.\nFinal rant Maybe I am too unreconstructed for this generation, but I think we are entering the age of impatience and chatGPT is just yet another product which encourages the culture of impatience.\nFrom https://www.rebootonline.com/blog/men-bing-from-mars-women-google-from-venus/. Disclaimer: nothing sexism such as suggesting women are doing worse here. Just posting the reference of that imaginery search string which was a classic years ago.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://katsuragicsl.github.io/blogs/thoughts/why-do-i-hate-chatgpt/","summary":"My pc is overheated how do i cool it down because it is my life1 Someone said that chatGPT will replace Google. Some kids/ early teenagers do often ask chatGPT for things that could have been found by Googling.\nI really hate the idea of replacing search engines by chatGPT. The problem I have with it is not really about AI, but about how do we interact with it.\nWhen we were kids and learnt how to use search engines, we acquired the skills of capturing important parts of the questions in our minds and turn them into keywords.","title":"Why do I hate using chatGPT to replace search engines"},{"content":"Introduction Recently I am trying to reverse engineering a simple Windows desktop game made with Unity. I took a look on some reference but found that the setup can be a bit frustrating. This post is attempting to make the setup clearer and more followable. Reference links are listed below.\nTools Our target is to decompile and debug the Assembly-CSharp.dll inside the folder \u0026lt;game root folder\u0026gt;\\\u0026lt;GANE_NAME\u0026gt;_Data\\Managed\\, which contains custom code the game developer wrote, not the code of Unity or other frameworks. It is written in C#. We need the below tools:\ndnSpy dotPeek (patched) de4dot Some files from official Unity Setup If you got a DEBUG build of the game, you are lucky, you can skip almost all the steps below and just use dnSpy to decompile, debug and modify the code (discussed below). But if you are not insider of the game development team and the team is not stupid enough (or, unfortunately, didn\u0026rsquo;t get enough sleep) to release a debug build to production, you will be dealing with a RELEASE build.\nFortunately, there is a way to tweak the release build to debug build.\nStep 1 Check the version of Unity of the game. Open the file \u0026lt;game root folder\u0026gt;\\\u0026lt;game name\u0026gt;_Data\\globalgamemanagers.assets with notepad, the version of Unity will be shown at the beginning.\nStep 2 Go to https://unity.com/releases/editor/archive and download the correct version of Unity. Install it.\nStep 3 Go to \u0026lt;Unity root\u0026gt;\\Editor\\Data\\PlaybackEngines\\windowsstandalonesupport\\Variations\\win32_development_mono if the game is 32bit, otherwise go to \u0026lt;Unity root\u0026gt;\\Editor\\Data\\PlaybackEngines\\windowsstandalonesupport\\Variations\\win64_development_mono.\nCopy Data\\Managed folder to the corr. folder of the game. Copy WindowsPlayer.exe and UnityPlayer.dll. Rename to \u0026lt;GAME_NAME\u0026gt;.exe. Copy \u0026lt;Unity root\u0026gt;\\Editor\\Data\\MonoBleedingEdge\\bin\\mono-2.0-bdwgc.dl to \u0026lt;GAME_NAME\u0026gt;\\MonoBleedingEdge. Create of edit boot.config and ensure the line player-connection-debug=1 presents. Step 4 Download this de4dot fork and compile it locally by Visual Studio.\nStep 5 Run de4dot.exe -f Assembly-CSharp.dll -o \u0026lt;output dll location\u0026gt; -fpdb. Remove the output pdb file.\nStep 6 Load the output dll into dotPeek.\nRight click on the output dll and select Export to Project Check the box Create *.pdb file Export Step 7 Run the following command: \u0026quot;%UNITY_MONO%\\bin\\mono.exe\u0026quot; \u0026quot;%UNITY_MONO%\\lib\\mono\\4.5\\pdb2mdb.exe\u0026quot; \u0026quot;\u0026lt;target_assembly_dll\u0026gt;\u0026quot; where \u0026quot;%UNITY_MONO% is equal to \u0026lt;Unity root\u0026gt;\\Editor\\Data\\MonoBleedingEdge.\nYou will get a .mdb file. Now you can debug with dnSpy the dll located in the same folder.\nReference Debugging Unity Games Let\u0026rsquo;s Play with Fire Wiki DotPeek PDB generation for assemblies without debug directory ","permalink":"https://katsuragicsl.github.io/blogs/software-hacking/unity-game-reversing-1/","summary":"Introduction Recently I am trying to reverse engineering a simple Windows desktop game made with Unity. I took a look on some reference but found that the setup can be a bit frustrating. This post is attempting to make the setup clearer and more followable. Reference links are listed below.\nTools Our target is to decompile and debug the Assembly-CSharp.dll inside the folder \u0026lt;game root folder\u0026gt;\\\u0026lt;GANE_NAME\u0026gt;_Data\\Managed\\, which contains custom code the game developer wrote, not the code of Unity or other frameworks.","title":"Unity Game Reversing(1): Setup"},{"content":"Introduction LOTS project, founded by mrd0x, is a collection of websites which is likely be trusted but can be used to evade detection when conducting phishing, C\u0026amp;C, exfiltration and downloading tools. In this post I will introduce a way to abusing PayPal and hopefully will be contributing to the LOTS project.\nThis series is (intentively) for my ideas on novel exfiltration/ C\u0026amp;C channels.\nExfiltraftion by Paypal In Paypal, one can dispute an order and upload his/ her evidence. This feature can be used as data exfiltration channel.\nWhile the document states that the dispute only accepts JPG, GIF, PNG and PDF, it is not complicated to pass this requirement by prepending the magic number of GIF to the file being uploaded (tested in API sandbox):\nprintf \u0026quot;\\x47\\x49\\x46\\x38\\x37\\x61\u0026quot; | cat - realfile \u0026gt; fakegif\nSucessfully uploaded on Paypal:\nAdvantages Evading SSL inspection\nOrganization which cares employees’ privacy (getting more these years) exempts some websites from SSL inspection:\nHealthcare Payments etc Example: Policy of Geoscience Australia (under Australian gov) ","permalink":"https://katsuragicsl.github.io/blogs/post-exploitation/lots-project-paypal/","summary":"Introduction LOTS project, founded by mrd0x, is a collection of websites which is likely be trusted but can be used to evade detection when conducting phishing, C\u0026amp;C, exfiltration and downloading tools. In this post I will introduce a way to abusing PayPal and hopefully will be contributing to the LOTS project.\nThis series is (intentively) for my ideas on novel exfiltration/ C\u0026amp;C channels.\nExfiltraftion by Paypal In Paypal, one can dispute an order and upload his/ her evidence.","title":"LOTS Project - Paypal"},{"content":"Tl;dr - unfixed information disclosure in Prisma Cloud defenders This post is about how to abuse a agent of a cloud security solution to get information which you should not know, like what security controls are applied, what assets the victim owns and the owners of the assets.\nIntroduction A few months ago I was examining the Prisma Cloud configuration of my workplace and accidentally discovered an information disclosure issue of Prisma Cloud defender (the agent). This issue has been reported to Palo Alto as security disclosure, however Palo Alto declared that this is an expected behavior.\nWhile Palo Alto seems not considering it as a problem, I think it is at least a trick for post exploitation. Below is some background knowledge.\nPrisma Cloud Prisma Cloud is a cloud security solution developed by Palo Alto, providing features including monitoring processes in standalone hosts/ run as daemon set in a K8S cluster.\nThis is done by deploying an agent (which is called a defender) in the target host.\nTo do so, one needs permissions to Prisma Cloud in order to get an access token. Defender Manager is the most suitable role for an operator whose manager only wants him to help deploying defenders without letting him/ her know other information, for example monitoring rules.\nDigging the hole host Let\u0026rsquo;s get a Defender Manager role and install a host defender on a linux machine, let\u0026rsquo;s say machine A.\nTake a look at the directory /var/lib/twistlock/local_db/local/\u0026lt;version number\u0026gt;/messages/, connect is a big file containing a lot of configs, while some details are stored in other files in the same directory.\nWhy can I view things that has nothing to do with my host? Other assets like container registries /var/lib/twistlock/local_db/local/\u0026lt;version number\u0026gt;/connect\nFirewall rules that belongs to OTHER hosts /var/lib/twistlock/local_db/local/\u0026lt;version number\u0026gt;/hostAppFirewallPolicy\nContent of custom rules (e.g. process/ network monitoring) /var/lib/twistlock/local_db/local/\u0026lt;version number\u0026gt;/updateCustomRule\nAs a Defender Manager, all you are supposed to have is the root access in the host where the defender to be installed on. However, after installing defenders, you will be able to get information much more than just the info of that host. For example, reading custom rules on other hosts, let say, hosts which are more important and you don\u0026rsquo;t want to get caught when you have the chance to access them.\nThose could help you if you are an internal threat of a company which uses Prisma Cloud but don\u0026rsquo;t know this trick :)\n","permalink":"https://katsuragicsl.github.io/blogs/post-exploitation/prisma-cloud-defenders/","summary":"Tl;dr - unfixed information disclosure in Prisma Cloud defenders This post is about how to abuse a agent of a cloud security solution to get information which you should not know, like what security controls are applied, what assets the victim owns and the owners of the assets.\nIntroduction A few months ago I was examining the Prisma Cloud configuration of my workplace and accidentally discovered an information disclosure issue of Prisma Cloud defender (the agent).","title":"Prisma Cloud Defenders"}]