<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>windows on KatsuragiCSL</title><link>https://katsuragicsl.github.io/tags/windows/</link><description>Recent content in windows on KatsuragiCSL</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Thu, 14 Apr 2022 20:54:39 +0800</lastBuildDate><atom:link href="https://katsuragicsl.github.io/tags/windows/index.xml" rel="self" type="application/rss+xml"/><item><title>Classic API Unhooking</title><link>https://katsuragicsl.github.io/posts/2022/04/classic-api-unhooking/</link><pubDate>Thu, 14 Apr 2022 20:54:39 +0800</pubDate><guid>https://katsuragicsl.github.io/posts/2022/04/classic-api-unhooking/</guid><description>Introduction AV and EDR use API hoooking to monitor API calls of processes. This post will take a brief look on how does a hook look like and the classic solution for malwares to bypass API hooking.
You can get the sample code here.
API hooking On a VM with BitDefender installed, if you load a PE into x64dbg and look for NtMapViewOfSection, you will see the first instruction is jmp to something.</description></item></channel></rss>