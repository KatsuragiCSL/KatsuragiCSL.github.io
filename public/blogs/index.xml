<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blogs on Script Adults</title>
    <link>http://localhost:1313/blogs/</link>
    <description>Recent content in Blogs on Script Adults</description>
    <image>
      <title>Script Adults</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.128.2</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Aug 2024 17:59:01 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/blogs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reinventing Catalan numbers</title>
      <link>http://localhost:1313/blogs/mathematics/reinventing-catalan-numbers/</link>
      <pubDate>Sat, 10 Aug 2024 17:59:01 +0800</pubDate>
      <guid>http://localhost:1313/blogs/mathematics/reinventing-catalan-numbers/</guid>
      <description>Counting binary trees I was thinking about of the problem of balancing a binary tree, and my mind stumbled across to the question &amp;ldquo;How many different binary trees with labelled nodes can you make without changing the traversal order?&amp;rdquo;. Afterwards I realized that the numbers of such binary trees are just Catalan numebrs (I was not really into combinatorics - now I am).
For example, the following has traversal order 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;6-&amp;gt;7</description>
    </item>
    <item>
      <title>From casual description of Turing Machine to the density of uncomputable functions</title>
      <link>http://localhost:1313/blogs/computer-science/from-casual-description-of-turing-machine-to-uncompuatble-functions/</link>
      <pubDate>Fri, 09 Aug 2024 01:23:55 +0800</pubDate>
      <guid>http://localhost:1313/blogs/computer-science/from-casual-description-of-turing-machine-to-uncompuatble-functions/</guid>
      <description>Defining the machine by describing it In Sipser&amp;rsquo;s Introduction to the theory of computation, a alternative way of defining a Turing machine (other than defining the formal 7-tuple, which is a PITA) - by its &amp;ldquo;description&amp;rdquo;. Example (from the proof of $A_{TM}$ is deciable):
M = â€œOn input &amp;lt;B, w&amp;gt;, where B is a DFA and w is a string: 1. Simulate B on input w. 2. If the simulation ends in an accept state, accept .</description>
    </item>
    <item>
      <title>Why do I hate using chatGPT to replace search engines</title>
      <link>http://localhost:1313/blogs/thoughts/why-do-i-hate-chatgpt/</link>
      <pubDate>Tue, 30 Jul 2024 23:39:11 +0800</pubDate>
      <guid>http://localhost:1313/blogs/thoughts/why-do-i-hate-chatgpt/</guid>
      <description>My pc is overheated how do i cool it down because it is my life1 Someone said that chatGPT will replace Google. Some kids/ early teenagers do often ask chatGPT for things that could have been found by Googling.
I really hate the idea of replacing search engines by chatGPT. The problem I have with it is not really about AI, but about how do we interact with it.
When we were kids and learnt how to use search engines, we acquired the skills of capturing important parts of the questions in our minds and turn them into keywords.</description>
    </item>
    <item>
      <title>Unity Game Reversing(1): Setup</title>
      <link>http://localhost:1313/blogs/software-hacking/unity-game-reversing-1/</link>
      <pubDate>Mon, 17 Apr 2023 04:16:55 +0800</pubDate>
      <guid>http://localhost:1313/blogs/software-hacking/unity-game-reversing-1/</guid>
      <description>Introduction Recently I am trying to reverse engineering a simple Windows desktop game made with Unity. I took a look on some reference but found that the setup can be a bit frustrating. This post is attempting to make the setup clearer and more followable. Reference links are listed below.
Tools Our target is to decompile and debug the Assembly-CSharp.dll inside the folder &amp;lt;game root folder&amp;gt;\&amp;lt;GANE_NAME&amp;gt;_Data\Managed\, which contains custom code the game developer wrote, not the code of Unity or other frameworks.</description>
    </item>
    <item>
      <title>LOTS Project - Paypal</title>
      <link>http://localhost:1313/blogs/post-exploitation/lots-project-paypal/</link>
      <pubDate>Sun, 02 Oct 2022 00:54:30 +0800</pubDate>
      <guid>http://localhost:1313/blogs/post-exploitation/lots-project-paypal/</guid>
      <description>Introduction LOTS project, founded by mrd0x, is a collection of websites which is likely be trusted but can be used to evade detection when conducting phishing, C&amp;amp;C, exfiltration and downloading tools. In this post I will introduce a way to abusing PayPal and hopefully will be contributing to the LOTS project.
This series is (intentively) for my ideas on novel exfiltration/ C&amp;amp;C channels.
Exfiltraftion by Paypal In Paypal, one can dispute an order and upload his/ her evidence.</description>
    </item>
    <item>
      <title>Prisma Cloud Defenders</title>
      <link>http://localhost:1313/blogs/post-exploitation/prisma-cloud-defenders/</link>
      <pubDate>Wed, 20 Jul 2022 17:54:24 +0800</pubDate>
      <guid>http://localhost:1313/blogs/post-exploitation/prisma-cloud-defenders/</guid>
      <description>Tl;dr - unfixed information disclosure in Prisma Cloud defenders This post is about how to abuse a agent of a cloud security solution to get information which you should not know, like what security controls are applied, what assets the victim owns and the owners of the assets.
Introduction A few months ago I was examining the Prisma Cloud configuration of my workplace and accidentally discovered an information disclosure issue of Prisma Cloud defender (the agent).</description>
    </item>
  </channel>
</rss>
